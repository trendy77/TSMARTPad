Notes on SAMD 21 Support:
	Beginning with IRLib 2.01 we have added preliminary support for the SAMD21G18A processor or as we will refer to it simply as SAMD 21. This processor is used in the Arduino Zero, Arduino M0, Arduino M0 Pro. It is also used by various Adafruit M0 boards such as the Circuit Playground Express, Trinket M0 and Gemma M0.
	Most of the code has been adapted from messages on the Arduino.cc support forum and from the code at
	https://github.com/manitou48/ZERO/tree/master/IRtest
	Receiving is supported through all three receiver classes. As you would expect the IRrecvLoop class can be used with any available input pin. The IRrecvPCI and IRfrequency classes can be used on any pin that supports "attachInterrupt()". Specifically that means everything except pin 4 on the Arduino Zero. And everything except pin 2 on the boards from Arduino.org such as the Arduino M0, M0 Pro, and Zero Pro. For details on supported pins see these links:
	https://www.arduino.cc/en/Reference/AttachInterrupt
	http://www.arduino.org/learning/reference/AttachInterrupt
	Note that although we support Arduino.org hardware, you should only use the Arduino.cc IDE for compiling your sketches.
	Both sending and receiving use GCLK0 even though GCLK0-GCLK3 are generally reserved the Arduino infrastructure. However we are using the default 48 MHz clock source and a divisor of "1" so we aren't changing any of the GCLK0 set up. It's therefore safe to use.
	The IRrecv receiver class using a 50 microsecond timer interrupt is also supported. It defaults to using hardware timer TC3 however TC4 and TC5 can also be used in case of conflicts with other libraries. 
	The IRrecv and IRrecvLoop classes should be able to use any available input pin. Note that all of our example sketches used pin 2 for receiver and pin 3 for frequency measurement. However pin 2 is not available for PCI interrupts on the Arduino.org platforms and neither 2 nor 3 are available on the Adafruit Feather M0 platforms. We are recommending using 5 and 6 for receiving and frequency measurement respectively.
	For sending, you can use any pin that supports PWM on your particular platform. On Arduino Zero that means pins 3, 4, 5, 6, 8, 9, 10, 11, 12, or 13. Additionally Arduino M0 Pro adds pins 2 and 7 to that list. In all cases the default output pin is 9. The code automatically selects TCC0 or TCC1 based on pin number as needed. It has been tested at frequencies of 36, 38, 39, 40 and 57 which are the frequencies of our supported protocols.
	When using with the Adafruit Circuit Playground Express there is a version IRLib built into the Circuit Playground library that preconfigured for the built-in IR transmitter and receiver.
	On the Adafruit Trinket M0 the default output pin is D0. The board can not use D1 for output because that pin does not support PWM output. On the Trinket M0 we have also successfully done output on pin D2. Theoretically the it should be able to use pins 3 or 4 but we have not been able to get that code to work. Anyone who can help is appreciated.
	On the Adafruit Gemma M0 the default output pin is also D0. Similarly D1 cannot be used for output because it does not support PWM. Theoretically D2 should work for output but it doesn't. Again anyone who can help resolve this is much appreciated.
	As of this release the code has been tested on Arduino Zero, Arduino M0 Pro, Adafruit Feather M0, Adafruit Circuit Playground Express, Adafruit Trinket M0 and Adafruit Gemma M0.
